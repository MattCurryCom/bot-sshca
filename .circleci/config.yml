version: 2
commands:
jobs:
  go-lint:
    docker:
      - image: circleci/golang:1.11
    steps:
      - checkout
      - run: "! go mod tidy -v 2>&1 | read"
      - run: go get github.com/golangci/golangci-lint/cmd/golangci-lint@v1.25.0
      - run: "golangci-lint run"
  py-lint:
    docker:
      - image: circleci/python:3.6.8
    steps:
      - run: sudo pip3 install isort flake8 black
      - run: "isort -rc . --check-only"
      - run: "flake8 . --max-line-length=88"
      - run: "black . --check"
  unit:
    docker:
      - image: circleci/golang:1.11
    steps:
      - checkout
      - run: go test ./...
  integration:
    machine:
      image: circleci/classic:latest
    steps:
      - checkout
      - run: "./integrationTest.sh"
  sphinx-build:
    docker:
      - image: circleci/python:2.7.16
    steps:
      - checkout
      - run: sudo pip install sphinx recommonmark sphinx_rtd_theme
      - run: cd docs && make html
  publish-github-release:
    docker:
      - image: circleci/golang:1.11
    steps:
      - checkout
      - run: ./buildAll.sh
      - run:
          command: |
            go get github.com/tcnksm/ghr
            export VERSION=`cat VERSION`-`git rev-parse --short HEAD`
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} ./bin/
workflows:
  version: 2
  build:
    jobs:
      - go-lint
      - py-lint
      - unit
      - integration
      - sphinx-build
      - publish-github-release:
          requires:
            - go-lint
            - py-lint
            - unit
            - integration
          filters:
            branches:
              only: master
